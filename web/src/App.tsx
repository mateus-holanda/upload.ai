import { useCompletion } from "ai/react"
import { Github, Wand2 } from "lucide-react"
import { useState } from "react"

import { PromptSelect } from "./components/PromptSelect"
import { VideoInputForm } from "./components/VideoInputForm"
import { Button } from "./components/ui/button"
import { Label } from "./components/ui/label"
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue
} from "./components/ui/select"
import { Separator } from "./components/ui/separator"
import { Slider } from "./components/ui/slider"
import { Textarea } from "./components/ui/textarea"


export function App() {
  const [videoId, setVideoId] = useState<string | null>(null)
  const [temperature, setTemperature] = useState(0.5)

  const {
    input,
    setInput,
    handleInputChange,
    handleSubmit,
    completion,
    isLoading,
  } = useCompletion({
    api: 'http://localhost:3333/ai/complete',
    body: {
      videoId,
      temperature,
    },
    headers: {
      'Content-type': 'application/json',
    },
  })

  return (
    <div className="min-h-screen flex flex-col">

      {/* Header */}
      <div className="px-6 py-3 flex items-center justify-between border-b">
        <h1 className="text-xl font-bold">upload.ai</h1>

        <div className="flex items-center gap-3">
          <span className="text-sm text-muted-foreground">
            Developed with ðŸ’› by mateus-holanda
          </span>

          <Separator orientation="vertical" className="h-6" />

          <Button variant="outline">
            <a
              href="https://github.com/mateus-holanda/upload.ai"
              target="_blank"
              className="flex items-center justify-center"
            >
              <Github className="w-4 h-4 mr-2" />
              Github
            </a>
          </Button>
        </div>
      </div>

      {/* Content */}
      <main className="flex-1 p-6 flex gap-6">

        {/* Inputs */}
        <div className="flex flex-col flex-1 gap-4">
          <div className="grid grid-rows-2 gap-4 flex-1">
            <Textarea
              className="resize-none p-4 leading-relaxed"
              placeholder="Insert prompt to the AI..."
              value={input}
              onChange={handleInputChange}
            />
            <Textarea
              className="resize-none p-4 leading-relaxed"
              placeholder="Result generated by the AI..."
              value={completion}
              readOnly
            />
          </div>

          <p className="text-sm text-muted-foreground">
            Reminder: you can use the variable
            <code className="text-violet-400">{' {transcription} '}</code>
            in your prompt to add the content of the selected video's transcription.
          </p>
        </div>

        {/* Sidebar */}
        <aside className="w-80 space-y-6">
          <VideoInputForm onVideoUploaded={setVideoId} />

          <Separator />

          <form onSubmit={handleSubmit} className="space-y-6">
            <div className="space-y-2">
              <Label>Prompt</Label>
              <PromptSelect onPromptSelected={setInput} />
            </div>

            <div className="space-y-2">
              <Label>AI Model</Label>
              <Select defaultValue="gpt3.5">
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="gpt3.5">GPT 3.5-turbo 16k</SelectItem>
                </SelectContent>
              </Select>
              <span className="block text-xs text-muted-foreground italic">
                Stay tunned for more AI models soon
              </span>
            </div>

            <Separator />

            <div className="space-y-4">
              <Label>Temperature</Label>
              <Slider
                min={0}
                max={1}
                step={0.1}
                value={[temperature]}
                onValueChange={(value) => setTemperature(value[0])}
                className="cursor-grab"
              />
              <span className="block text-xs text-muted-foreground italic leading-relaxed">
                Higher values tend to generate more creative results but also
                more prone to errors.
              </span>
            </div>

            <Separator />

            <Button disabled={isLoading} type="submit" className="w-full">
              Generate
              <Wand2 className="w-4 h-4 ml-2" />
            </Button>
          </form>
        </aside>
      </main>
    </div>
  )
}
